/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-07-02 12:17:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import model.Employee;

public final class edit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("model.Employee");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');

    Employee e = (Employee) request.getAttribute("employee");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <title>Edit Employee - Kora Style</title>\n");
      out.write("        <style>\n");
      out.write("            body {\n");
      out.write("                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("                background-color: #f4f6f8;\n");
      out.write("                margin: 0;\n");
      out.write("                padding: 20px;\n");
      out.write("                color: #333;\n");
      out.write("            }\n");
      out.write("            .container {\n");
      out.write("                max-width: 500px;\n");
      out.write("                margin: 50px auto;\n");
      out.write("                background-color: #fff;\n");
      out.write("                padding: 30px;\n");
      out.write("                border-radius: 10px;\n");
      out.write("                box-shadow: 0 4px 8px rgba(0,0,0,0.05);\n");
      out.write("            }\n");
      out.write("            h2 {\n");
      out.write("                text-align: center;\n");
      out.write("                margin-bottom: 25px;\n");
      out.write("                color: #444;\n");
      out.write("            }\n");
      out.write("            label {\n");
      out.write("                display: block;\n");
      out.write("                margin-top: 15px;\n");
      out.write("                font-weight: bold;\n");
      out.write("            }\n");
      out.write("            input[type=\"text\"],\n");
      out.write("            input[type=\"number\"] {\n");
      out.write("                width: 100%;\n");
      out.write("                padding: 10px;\n");
      out.write("                margin-top: 5px;\n");
      out.write("                border: 1px solid #ccc;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                font-size: 14px;\n");
      out.write("            }\n");
      out.write("            button {\n");
      out.write("                width: 100%;\n");
      out.write("                padding: 12px;\n");
      out.write("                background-color: #0066cc;\n");
      out.write("                color: white;\n");
      out.write("                border: none;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                font-size: 16px;\n");
      out.write("                margin-top: 20px;\n");
      out.write("                cursor: pointer;\n");
      out.write("                transition: background-color 0.3s;\n");
      out.write("            }\n");
      out.write("            button:hover {\n");
      out.write("                background-color: #004c99;\n");
      out.write("            }\n");
      out.write("            .back-link {\n");
      out.write("                display: block;\n");
      out.write("                text-align: center;\n");
      out.write("                margin-top: 15px;\n");
      out.write("                text-decoration: none;\n");
      out.write("                color: #0066cc;\n");
      out.write("                font-size: 14px;\n");
      out.write("            }\n");
      out.write("            .back-link:hover {\n");
      out.write("                text-decoration: underline;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <h2>Edit Employee</h2>\n");
      out.write("            <form action=\"employeeservlet\" method=\"post\">\n");
      out.write("                <input name=\"id\" type=\"hidden\" value=\"");
      out.print( e.getId() );
      out.write("\">\n");
      out.write("                <input name=\"action\" type=\"hidden\" value=\"update\">\n");
      out.write("\n");
      out.write("                <label for=\"name\">Name</label>\n");
      out.write("                <input name=\"name\" type=\"text\" id=\"name\" value=\"");
      out.print( e.getName() );
      out.write("\" placeholder=\"Enter name\" required>\n");
      out.write("\n");
      out.write("                <label for=\"designation\">Designation</label>\n");
      out.write("                <input name=\"designation\" type=\"text\" id=\"designation\" value=\"");
      out.print( e.getDesignation() );
      out.write("\" placeholder=\"Enter designation\" required>\n");
      out.write("\n");
      out.write("                <label for=\"salary\">Salary</label>\n");
      out.write("                <input name=\"salary\" type=\"number\" id=\"salary\" value=\"");
      out.print( e.getSalary() );
      out.write("\" placeholder=\"Enter salary\" required>\n");
      out.write("\n");
      out.write("                <button type=\"submit\">Update Employee</button>\n");
      out.write("            </form>\n");
      out.write("            <a href=\"index.jsp\" class=\"back-link\">‚Üê Back to Employee List</a>\n");
      out.write("        </div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
